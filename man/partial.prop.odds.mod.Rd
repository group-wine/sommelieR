% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/partial.prop.odds.mod.R
\name{partial.prop.odds.mod}
\alias{partial.prop.odds.mod}
\title{Run partial proportional odds models for ordinal outcomes}
\usage{
partial.prop.odds.mod(y.name, in.data, prop.odds.formula = NULL,
  beta.prop.odds.start = NULL, non.prop.odds.formula = NULL,
  beta.non.prop.odds.start = NULL, method = "BFGS",
  int.vec.scale = 5, itnmax = NULL, seed = c(14, 15))
}
\arguments{
\item{y.name}{A character vector specifying the name of the variable to be modeled.}

\item{in.data}{The input data object of type data frame or matrix.}

\item{prop.odds.formula}{An optional formula specifying the predictor variables assumed to have proportional odds across levels of y. At least one of prop.odds.formula and non.prop.odds.formula must be specified.}

\item{beta.prop.odds.start}{A vector of starting values for proportional odds betas. This should only be specified in conjunction with prop.odds.formula.}

\item{non.prop.odds.formula}{An optional formula specifying the predictor variables assumed not to have proportional odds across levels of y. At least one of prop.odds.formula and non.prop.odds.formula must be specified.}

\item{beta.non.prop.odds.start}{A matrix of starting values for non proportional odds betas. This should only be specified in conjunction with non.prop.odds.formula. Columns correspond to the j-1 bottom levels of the outcome variable y, rows correspond to variables.}

\item{method}{A character specifying the optimization method to be used by package optimx in maximizing the log likelihood. Defaults to BFGS.}

\item{int.vec.scale}{A tuning parameter used to adjust the starting values for the intercepts. Defaults to 5.}

\item{itnmax}{An optional scalar specifying the iteration limit used in maximizing the log likelihood. Defaults to the default optimx value for the given method.}

\item{seed}{A vector of length 2 specifying the seed used to generate starting values for model coefficients, if not user specified. Defaults to c(14, 15).}
}
\value{
A list of class partial.prop.odds
\item{y.name}{A character vector specifying the model outcome.}
\item{y.levels}{The ordered levels of the model outcome.}
\item{prop.odds.formula}{The formula used for the proportional odds betas.}
\item{non.prop.odds.formula}{The formula used for the non-proportional odds betas.}
\item{log.lik}{The log-likelihood of the fitted model.}
\item{conv.code}{The convergence code from optimx.}
\item{intercepts}{The fitted model intercepts}
\item{beta.hat.prop.odds}{A vector of the estimated proportional odds coefficients, if specified.}
\item{beta.hat.non.prop.odds}{A matrix of the estimated non-proportional odds coefficients, where the j-1 columns correspond to the j-1 bottom levels of y, and the rows are betas.}
\item{est.probs}{The fitted probabilities of each level of y for each subject. Rows are subjects, columns are levels of y.}
}
\description{
This function runs partial proportional odds models for ordinal outcomes.
}
\examples{

data(red_train)
starts <- coef(lm(quality ~ alcohol+ pH + volatile.acidity, data = red_train))
training.result <- partial.prop.odds.mod(y ="quality", in.data = red_train,
prop.odds.formula = ~ alcohol + pH,
beta.prop.odds.start = starts[2:3],
non.prop.odds.formula = ~ volatile.acidity,
beta.non.prop.odds.start = matrix(rep(starts[4], 5), nrow = 1),
method = "BFGS",
seed = c(14, 15), itnmax = 1000)

}
